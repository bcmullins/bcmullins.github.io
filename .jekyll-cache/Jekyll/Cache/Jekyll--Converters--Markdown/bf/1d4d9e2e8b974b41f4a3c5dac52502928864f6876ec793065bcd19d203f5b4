I"~<p>I recently moved to a <a href="https://system76.com">System76</a> Darter Pro running <a href="https://system76.com/pop">Pop!_OS 19.10</a> as my primary laptop (review coming soon). As you might have guessed by the version number, Pop!_OS is System76’s fork of Ubuntu. With this move, I switched to <a href="https://shadow.tech">Shadow</a> as my cloud gaming service, since they have a supported Linux client - no messing with Wine, dual boots, or VMs required! The Shadow Linux client is built to be compatible with 18.04+ but didn’t work right away due to some <a href="https://wiki.archlinux.org/index.php/Hardware_video_acceleration">Video Acceleration</a> issues. Below is a guide for getting Shadow running on 19.10 based on my experience troubleshooting.</p>

<div style="content: ''; clear: both; display: flex;">
  <div style="float: left; width 40%; padding: 5px; flex: 40%">
    <img src="/images/blog/shadow_pop/pop.png" />
  </div>
  <div style="float: right; width 60%; padding: 5px; flex:60%">
    <img src="/images/blog/shadow_pop/shadow_logo.jpeg" />
  </div>
</div>

<p>The <a href="https://nicolasguilloux.github.io/blade-shadow-beta/">Shadow Linux client</a> is an easy to use AppImage file which looks to have been developed initially by the Shadow Linux community. Following the documentation for getting the VA-API to detect my onboard GPU, I ran into numerous issues with drivers. Despite my efforts, I could not get any results with the i965 driver, so I tried using the iHD driver suggested by a random StackExchange post. By switching drivers and passing a flag when launching Shadow, the client runs and streams without issues.</p>

<p>Here are the steps:</p>

<p>1 - Use <code class="language-plaintext highlighter-rouge">vainfo</code> to find your GPU. If you see <code class="language-plaintext highlighter-rouge">-1</code> returned anywhere (like below), then you likely have driver problems.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="o">&gt;</span> <span class="nb">sudo </span>apt-get <span class="nb">install </span>vainfo
<span class="o">&gt;</span> vainfo
libva info: VA-API version 1.5.0
libva info: va_getDriverName<span class="o">()</span> returns 0
libva info: Trying to open /usr/lib/x86_64-linux-gnu/dri/i965_drv_video.so
libva info: Found init <span class="k">function </span>__vaDriverInit_1_4
libva error: /usr/lib/x86_64-linux-gnu/dri/i965_drv_video.so init failed
libva info: va_openDriver<span class="o">()</span> returns <span class="nt">-1</span>
vaInitialize failed with error code <span class="nt">-1</span> <span class="o">(</span>unknown libva error<span class="o">)</span>,exit</code></pre></figure>

<p>2 - Install the <a href="https://github.com/intel/media-driver">drivers for the onboard GPU</a>. Note that <code class="language-plaintext highlighter-rouge">intel-media-va-driver</code> doesn’t seem to give you all that you need, so <code class="language-plaintext highlighter-rouge">intel-media-va-driver-non-free</code> may be necessary.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="o">&gt;</span><span class="nb">sudo </span>apt-get <span class="nb">install </span>libva libmfx1 libmfx-tools intel-media-va-driver-non-free</code></pre></figure>

<p>3 - Check that the drivers are recognized. You should be seeing both <code class="language-plaintext highlighter-rouge">H264</code> and <code class="language-plaintext highlighter-rouge">HEVC</code> in the output.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="o">&gt;</span> <span class="nb">export </span><span class="nv">LIBVA_DRIVER_NAME</span><span class="o">=</span>iHD
<span class="o">&gt;</span> vainfo
libva info: VA-API version 1.5.0
libva info: va_getDriverName<span class="o">()</span> returns 0
libva info: User requested driver <span class="s1">'iHD'</span>
libva info: Trying to open /usr/lib/x86_64-linux-gnu/dri/iHD_drv_video.so
libva info: Found init <span class="k">function </span>__vaDriverInit_1_5
libva info: va_openDriver<span class="o">()</span> returns 0
vainfo: VA-API version: 1.5 <span class="o">(</span>libva 2.5.0<span class="o">)</span>
vainfo: Driver version: Intel iHD driver - 1.0.0
vainfo: Supported profile and entrypoints
      VAProfileNone                   :	VAEntrypointVideoProc
      VAProfileNone                   :	VAEntrypointStats
      VAProfileMPEG2Simple            :	VAEntrypointVLD
      VAProfileMPEG2Simple            :	VAEntrypointEncSlice
      VAProfileMPEG2Main              :	VAEntrypointVLD
      VAProfileMPEG2Main              :	VAEntrypointEncSlice
      VAProfileH264Main               :	VAEntrypointVLD
      VAProfileH264Main               :	VAEntrypointEncSlice
      VAProfileH264Main               :	VAEntrypointFEI
      VAProfileH264Main               :	VAEntrypointEncSliceLP
      VAProfileH264High               :	VAEntrypointVLD
      VAProfileH264High               :	VAEntrypointEncSlice
      VAProfileH264High               :	VAEntrypointFEI
      VAProfileH264High               :	VAEntrypointEncSliceLP
      VAProfileVC1Simple              :	VAEntrypointVLD
      VAProfileVC1Main                :	VAEntrypointVLD
      VAProfileVC1Advanced            :	VAEntrypointVLD
      VAProfileJPEGBaseline           :	VAEntrypointVLD
      VAProfileJPEGBaseline           :	VAEntrypointEncPicture
      VAProfileH264ConstrainedBaseline:	VAEntrypointVLD
      VAProfileH264ConstrainedBaseline:	VAEntrypointEncSlice
      VAProfileH264ConstrainedBaseline:	VAEntrypointFEI
      VAProfileH264ConstrainedBaseline:	VAEntrypointEncSliceLP
      VAProfileVP8Version0_3          :	VAEntrypointVLD
      VAProfileVP8Version0_3          :	VAEntrypointEncSlice
      VAProfileHEVCMain               :	VAEntrypointVLD
      VAProfileHEVCMain               :	VAEntrypointEncSlice
      VAProfileHEVCMain               :	VAEntrypointFEI
      VAProfileHEVCMain10             :	VAEntrypointVLD
      VAProfileHEVCMain10             :	VAEntrypointEncSlice
      VAProfileVP9Profile0            :	VAEntrypointVLD
      VAProfileVP9Profile2            :	VAEntrypointVLD</code></pre></figure>

<p>4 - Test the video encoding. It’s a strange video… but it’s in the <a href="https://github.com/Intel-Media-SDK/MediaSDK/wiki/Intel-media-stack-on-Ubuntu">Intel Media Kit documentation</a>.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="o">&gt;</span>wget https://fate-suite.libav.org/h264-conformance/AUD_MW_E.264
<span class="o">&gt;</span>/usr/share/mfx/samples/sample_decode h264 <span class="nt">-i</span> AUD_MW_E.264 <span class="nt">-r</span> <span class="nt">-f</span> 30 <span class="nt">-rgb4</span></code></pre></figure>

<p>5 - Run the Shadow AppImage with the <em>no sandbox</em> option set.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="o">&gt;</span><span class="nb">cd </span>path/to/AppImage/directory
<span class="o">&gt;</span>./Shadow.AppImage <span class="nt">--no-sandbox</span></code></pre></figure>

<p>For the future, you may want to add the export statement from step three to your .bashrc file or create a shell script to that runs the export statement and the AppImage. Enjoy!</p>

<blockquote>
  <p>Note: I’m still not 100% confident in the details of how this method works under the hood. If anyone wants to chat about it, feel free to email me at brettcmullins at gmail.com.</p>
</blockquote>
:ET